{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name_",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "trustee",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "TF",
						"type": "bool"
					}
				],
				"name": "Judged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousTrustee",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newTrustee",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "trusteeId",
						"type": "uint256"
					}
				],
				"name": "TransferTrustee",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "vault",
						"type": "address"
					}
				],
				"name": "VaultCreated",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_trustee",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "trusteeId",
						"type": "uint256"
					}
				],
				"name": "changeTrustee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "condition",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "conditionCounter",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					}
				],
				"name": "createVault",
				"outputs": [
					{
						"internalType": "address",
						"name": "vault",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "denominator",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "vaultId",
						"type": "uint256"
					}
				],
				"name": "getReceivers",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "getVaults",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "TF",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "trusteeId",
						"type": "uint256"
					}
				],
				"name": "judge",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "numerator",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_trustees",
						"type": "address[]"
					},
					{
						"internalType": "uint256",
						"name": "_numerator",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_denominator",
						"type": "uint256"
					}
				],
				"name": "setTrustees",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "trusteeIds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "trusteeOpinion",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "trustees",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "vaultNumber",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/extensions/Vault/VaultFactory.sol": "VaultFactory"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/@OpenZeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1",
			"license": "MIT",
			"urls": [
				"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163",
				"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro"
			]
		},
		"contracts/@OpenZeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a",
			"license": "MIT",
			"urls": [
				"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14",
				"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL"
			]
		},
		"contracts/@OpenZeppelin/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0",
			"license": "MIT",
			"urls": [
				"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e",
				"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7"
			]
		},
		"contracts/@OpenZeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f",
			"license": "MIT",
			"urls": [
				"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c",
				"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux"
			]
		},
		"contracts/@OpenZeppelin/contracts/utils/Create2.sol": {
			"keccak256": "0x27f9465d84949f059ed37b23c82f4a9fc16c1b8d6fbd69837a0f920875e2af83",
			"license": "MIT",
			"urls": [
				"bzz-raw://decb618117829151750642e6fa9f324b825841f9d68fab5143249d2ca204787b",
				"dweb:/ipfs/QmcyPk34JPQBpJQb8dGPsd1AzimGjXTMDKZYL73rNAC6oZ"
			]
		},
		"contracts/@OpenZeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4",
			"license": "MIT",
			"urls": [
				"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6",
				"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx"
			]
		},
		"contracts/IOracle.sol": {
			"keccak256": "0x46417aea4a0fb65a95c3a72784cdd7c05af2dce07e4e48b3eea93a72b4cbf081",
			"license": "MIT",
			"urls": [
				"bzz-raw://e65fbcef525d5532cfa7ca7575cd1be4e2a4990997973429cf8165edcc73865f",
				"dweb:/ipfs/QmU9NTo1jaoHptfgoEcUB5fwcNJihxUcXw3MctaNoZYcCS"
			]
		},
		"contracts/Oracle.sol": {
			"keccak256": "0xbd71076e4a8df18b92fc72df0c964f754e88ea5df991ef44ba5542c90d7d2778",
			"license": "MIT",
			"urls": [
				"bzz-raw://02d0e3a4ad85d54860c3868046d215cb6a8d81b3652dd62d0271e68dcdbc5bf4",
				"dweb:/ipfs/QmPhUsxEMAijWbvvfxQu4spFjofHgYzeVX3RGQyPfhDgF3"
			]
		},
		"contracts/extensions/Vault/IVault.sol": {
			"keccak256": "0x221e58adb5c534bfe32954a42d5bed392aae8a8d62f342bbf4f62133353271b7",
			"license": "MIT",
			"urls": [
				"bzz-raw://98e84bfed7e46ff4ff75e7a1296412f3f72322592de4f393e00ffebb424202fb",
				"dweb:/ipfs/QmTiApnqy2UdNpwJLDNgFoUrPQLZzEMQKePigSFsQo4jNr"
			]
		},
		"contracts/extensions/Vault/IVaultFactory.sol": {
			"keccak256": "0xfb9782fa3cb4db59b97ce8b3969f2eb9bc584669ce85e4788facbd9332fa9b1a",
			"license": "MIT",
			"urls": [
				"bzz-raw://59534202fddc941f7cec45c9382df742042cba38b2d183de756cd0d71031ba75",
				"dweb:/ipfs/QmbqFGgbcngeh8bHdE53JresoAprqPPGtgdPG6n5qA2YZ1"
			]
		},
		"contracts/extensions/Vault/Vault.sol": {
			"keccak256": "0x0458040893532773d21c0f6ddc16998d8c6eca3dffaf8ce4cdb3fc82810cbe8e",
			"license": "MIT",
			"urls": [
				"bzz-raw://2c8649935013854e98d29cafd89ec54dd1fd7f8d2829f3b7c93c8398ce4ce216",
				"dweb:/ipfs/QmepW1KHBttSxRp8pcnx15XSnHiQtGtkwFwskCpUzaN2UK"
			]
		},
		"contracts/extensions/Vault/VaultFactory.sol": {
			"keccak256": "0xfe04c94e54430236d801d200f53d8fa769f0140e0c6b8b2492394247ccb5bb51",
			"license": "MIT",
			"urls": [
				"bzz-raw://bbb123af98daa04d33e92c049ed5027c179363d11d1b744eb046c3bb96cede8a",
				"dweb:/ipfs/QmesKLpJEsXRKvEzChcAQDsqNFQn5f7ZXBpkor2fpSoCq2"
			]
		}
	},
	"version": 1
}